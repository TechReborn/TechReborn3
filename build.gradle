buildscript {
	repositories {
		mavenCentral()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		maven {
			name = "sonatype"
			url = "https://oss.sonatype.org/content/repositories/snapshots/"
		}
		maven {
			name = "Modmuss50"
			url = "http://maven.modmuss50.me/"
		}
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
		classpath "gradle.plugin.net.minecrell:licenser:0.2.1"
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: net.minecrell.gradle.licenser.Licenser

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	maven {
		name = "Modmuss50"
		url = "http://maven.modmuss50.me/"
	}
}

version = "3.0.0"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = version + "." + "${System.getenv().BUILD_NUMBER}"
}

sourceSets {
    RebornCore {
		java {
			srcDir "RebornCore/src/main/java"
		}
		resources {
			srcDir "RebornCore/src/main/resources"
		}
    }
}

minecraft {
	version = "1.11.2-13.20.0.2282"
	mappings = "snapshot_20161220"
	replace "@MODVERSION@", project.version
	useDepAts = true
	runDir = "run"
}

license {
	header file('HEADER')
	include '**/*.java'
	ignoreFailures = true
}

group = 'TechReborn'


dependencies {
	//TODO Get new RC
	// deobfCompile('RebornCore:RebornCore-1.11.2:+:universal') {
	// 	transitive = false
	// }
	compile "teamreborn.concrete:ConcreteReborn:0.1.0"
}


processResources{
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft.version

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version': project.version, 'mcversion': project.minecraft.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}


task deobfJar(type: Jar) {
	from sourceSets.main.output
	exclude "**/*.psd"
	classifier = 'dev'
}

jar {
	exclude "**/*.psd"
	classifier = 'universal'
}

artifacts {
	archives deobfJar
}

build.dependsOn deobfJar

task signJar(type: SignJar, dependsOn: reobfJar) {
	onlyIf {
		project.hasProperty('keyStore')
	}

	if (project.hasProperty('keyStore')) {
		keyStore = project.keyStore
		alias = project.keyStoreAlias
		storePass = project.keyStorePass
		keyPass = project.keyStoreKeyPass
		inputFile = jar.archivePath
		outputFile = jar.archivePath
	}

}

build.dependsOn signJar

apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/ideconfig.gradle'

task setupAll {
    idea.module.sourceDirs += sourceSets.RebornCore.java.srcDirs
    idea.module.sourceDirs += sourceSets.RebornCore.resources.srcDirs
}

tasks.idea.dependsOn "setupDecompWorkspace"
setupAll.finalizedBy(tasks.idea)